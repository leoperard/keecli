name: Release

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      if: steps.release.outputs.released == 'true'

    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      if: steps.release.outputs.released == 'true'

    - name: Setup a local virtual environment
      if: steps.release.outputs.released == 'true'
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - name: Define a cache for the virtual environment
      uses: actions/cache@v3
      if: steps.release.outputs.released == 'true'
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Build keecli
      if: steps.release.outputs.released == 'true'
      run: poetry build

    - name: Publish to PyPi
      uses: pypa/gh-action-pypi-publish@release/v1
      if: steps.release.outputs.released == 'true'
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
